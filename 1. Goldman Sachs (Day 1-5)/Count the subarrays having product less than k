Question:

  Given an array of positive numbers, 
  the task is to find the number of possible contiguous subarrays having product less than a given number k.

Example 1:

  Input : 
  n = 4, k = 10
  a[] = {1, 2, 3, 4}

  Output : 
  7

  Explanation:
  The contiguous subarrays are {1}, {2}, {3}, {4} 
  {1, 2}, {1, 2, 3} and {2, 3} whose count is 7.


Example 2:

  Input:
  n = 7 , k = 100
  a[] = {1, 9, 2, 8, 6, 4, 3}
  
  Output:
  16
  
  
  
  
  Solution1:      // BRUTE FORCE (TLE)
      
      
    int countSubArrayProductLessThanK(const vector<int>& a, int n, long long k) {
            int prod,cnt=0;
            int i,j;
            for( i=0;i<n;i++){
                if(a[i]<k)
                    cnt++;
                prod=a[i];

                for( j=i+1;j<n;j++){
                    prod*=a[j];

                    if(prod<k)
                        cnt++;
                    else
                        break;
                }
            }
            return cnt;

        }
        
        
 SOLUTION 2 : (ACCEPTED)
 
 
 
   int countSubArrayProductLessThanK(const vector<int>& a, int n, long long k) {
          long long int prod=1,cnt=0;
          int start=0,end=0;

          while(end<n){
              prod*=a[end];

              while(end<n && prod>=k){
                  prod/= a[start++];
              }

              if(prod<k){
                  cnt+= (end-start)+1;
              }

              end++;
          }
          return cnt;

      }
